{
  "version": 3,
  "sources": ["../../marko/dist/debug/dom.mjs"],
  "sourcesContent": ["// src/common/attr-tag.ts\nvar empty = [];\nvar rest = true ? Symbol(\"Attribute Tag\") : Symbol();\nfunction attrTag(attrs2) {\n  attrs2[Symbol.iterator] = attrTagIterator;\n  attrs2[rest] = empty;\n  return attrs2;\n}\nfunction attrTags(first, attrs2) {\n  if (first) {\n    if (first[rest] === empty) {\n      first[rest] = [attrs2];\n    } else {\n      first[rest].push(attrs2);\n    }\n    return first;\n  }\n  return attrTag(attrs2);\n}\nfunction* attrTagIterator() {\n  yield this;\n  yield* this[rest];\n}\n\n// src/common/for.ts\nfunction forIn(obj, cb) {\n  for (const key in obj) {\n    cb(key, obj[key]);\n  }\n}\nfunction forOf(list, cb) {\n  if (list) {\n    let i = 0;\n    for (const item of list) {\n      cb(item, i++);\n    }\n  }\n}\nfunction forTo(to, from, step, cb) {\n  const start = from || 0;\n  const delta = step || 1;\n  for (let steps = (to - start) / delta, i = 0; i <= steps; i++) {\n    cb(start + i * delta);\n  }\n}\n\n// src/common/helpers.ts\nfunction classValue(classValue2) {\n  return toDelimitedString(classValue2, \" \", stringifyClassObject);\n}\nfunction stringifyClassObject(name, value2) {\n  return value2 ? name : \"\";\n}\nfunction styleValue(styleValue2) {\n  return toDelimitedString(styleValue2, \";\", stringifyStyleObject);\n}\nfunction stringifyStyleObject(name, value2) {\n  return value2 || value2 === 0 ? name + \":\" + value2 : \"\";\n}\nfunction toDelimitedString(val, delimiter, stringify) {\n  let str = \"\";\n  let sep = \"\";\n  let part;\n  if (val) {\n    if (typeof val !== \"object\") {\n      str += val;\n    } else if (Array.isArray(val)) {\n      for (const v of val) {\n        part = toDelimitedString(v, delimiter, stringify);\n        if (part) {\n          str += sep + part;\n          sep = delimiter;\n        }\n      }\n    } else {\n      for (const name in val) {\n        part = stringify(name, val[name]);\n        if (part) {\n          str += sep + part;\n          sep = delimiter;\n        }\n      }\n    }\n  }\n  return str;\n}\nfunction isEventHandler(name) {\n  return /^on[A-Z-]/.test(name);\n}\nfunction getEventHandlerName(name) {\n  return name[2] === \"-\" ? name.slice(3) : name.slice(2).toLowerCase();\n}\nfunction normalizeDynamicRenderer(value2) {\n  return value2 ? value2.content || value2.default || value2 : void 0;\n}\n\n// src/dom/event.ts\nvar defaultDelegator = createDelegator();\nfunction on(element, type, handler) {\n  if (element[\"$\" + type] === void 0) {\n    defaultDelegator(element, type, handleDelegated);\n  }\n  element[\"$\" + type] = handler || null;\n}\nfunction createDelegator() {\n  const kEvents = Symbol();\n  return function ensureDelegated(node, type, handler) {\n    ((node = node.getRootNode())[kEvents] ||= {})[type] ||= (node.addEventListener(type, handler, true), 1);\n  };\n}\nfunction handleDelegated(ev) {\n  let target = !rendering && ev.target;\n  while (target) {\n    target[\"$\" + ev.type]?.(ev, target);\n    target = ev.bubbles && !ev.cancelBubble && target.parentNode;\n  }\n}\n\n// src/dom/resolve-cursor-position.ts\nfunction resolveCursorPosition(inputType2, initialPosition, initialValue, updatedValue) {\n  if (\n    // If initial position is null or false then\n    // either this node is not the active element\n    // or does not support selection ranges.\n    (initialPosition || initialPosition === 0) && (initialPosition !== initialValue.length || // short regex to match input types that delete backwards\n    /kw/.test(inputType2))\n  ) {\n    const before = initialValue.slice(0, initialPosition);\n    const after = initialValue.slice(initialPosition);\n    if (updatedValue.startsWith(before)) {\n      return initialPosition;\n    } else if (updatedValue.endsWith(after)) {\n      return updatedValue.length - after.length;\n    } else {\n      const relevantChars = stripSpacesAndPunctuation(before).length;\n      let pos = 0;\n      let relevantIndex = 0;\n      while (relevantIndex < relevantChars) {\n        if (stripSpacesAndPunctuation(updatedValue[pos])) relevantIndex++;\n        pos++;\n      }\n      return pos;\n    }\n  }\n  return -1;\n}\nfunction stripSpacesAndPunctuation(str) {\n  return str.replace(/[^\\p{L}\\p{N}]/gu, \"\");\n}\n\n// src/common/meta.ts\nvar DEFAULT_RUNTIME_ID = \"M\";\nvar DEFAULT_RENDER_ID = \"_\";\n\n// src/dom/resume.ts\nvar registeredValues = {};\nvar branchesEnabled;\nfunction enableBranches() {\n  branchesEnabled = 1;\n}\nfunction init(runtimeId = DEFAULT_RUNTIME_ID) {\n  if (true) {\n    if (!runtimeId.match(/^[_$a-z][_$a-z0-9]*$/i)) {\n      throw new Error(\n        `Invalid runtimeId: \"${runtimeId}\". The runtimeId must be a valid JavaScript identifier.`\n      );\n    }\n    const descriptor = Object.getOwnPropertyDescriptor(self, runtimeId);\n    if (descriptor && (descriptor.set || descriptor.configurable === false)) {\n      throw new Error(\n        `Marko initialized multiple times with the same $global.runtimeId of ${JSON.stringify(runtimeId)}. It could be that there are multiple copies of Marko running on the page.`\n      );\n    }\n  }\n  const renders = self[runtimeId];\n  const defineRuntime = (desc) => Object.defineProperty(self, runtimeId, desc);\n  let resumeRender;\n  const initRuntime = (renders2) => {\n    defineRuntime({\n      value: resumeRender = (renderId) => {\n        const render = resumeRender[renderId] = renders2[renderId] || renders2(renderId);\n        const walk2 = render.w;\n        const commentPrefixLen = render.i.length;\n        const scopeLookup = render.s = {};\n        const serializeContext = {\n          _: registeredValues\n        };\n        const branches = branchesEnabled && /* @__PURE__ */ (() => {\n          const branchStack = [];\n          const branchIds = /* @__PURE__ */ new Set();\n          const parentBranchIds = /* @__PURE__ */ new Map();\n          let lastEndNode;\n          let currentBranchId;\n          const endBranch = (branchId, reference) => {\n            const branch = scopeLookup[branchId] ||= {};\n            let endNode = reference;\n            let prevNode;\n            while ((prevNode = endNode.previousSibling) !== branch.___startNode && ~visits.indexOf(endNode = prevNode)) ;\n            branch.___endNode = lastEndNode = endNode === lastEndNode ? reference.parentNode.insertBefore(new Text(), reference) : endNode;\n            branch.___startNode ||= lastEndNode;\n            branchIds.add(branchId);\n            return branch;\n          };\n          return {\n            ___visit() {\n              if (visitToken === \"[\" /* BranchStart */) {\n                if (currentBranchId && visitDataIndex) {\n                  endBranch(currentBranchId, visit);\n                  currentBranchId = branchStack.pop();\n                }\n                if (currentBranchId) {\n                  branchStack.push(currentBranchId);\n                  parentBranchIds.set(scopeId, currentBranchId);\n                }\n                currentBranchId = scopeId;\n                visitScope.___startNode = visit;\n              } else if (visitToken === \"]\" /* BranchEnd */) {\n                const curParent = visit.parentNode;\n                const startNode = endBranch(\n                  currentBranchId,\n                  visit\n                ).___startNode;\n                visitScope[visitData] = visit;\n                if (curParent !== startNode.parentNode) {\n                  curParent.prepend(startNode);\n                }\n                currentBranchId = branchStack.pop();\n              } else {\n                let next = visitData.indexOf(\" \");\n                let curNode = visit;\n                visitScope[~next ? visitData.slice(0, next) : visitData] = visitToken === \"=\" /* BranchSingleNodeOnlyChildInParent */ ? visit.parentNode : visit;\n                while (~next) {\n                  const start = next + 1;\n                  next = visitData.indexOf(\" \", start);\n                  const childScopeId = +visitData.slice(\n                    start,\n                    ~next ? next : visitData.length\n                  );\n                  curNode = endBranch(childScopeId, curNode).___endNode;\n                  parentBranchIds.set(childScopeId, scopeId);\n                }\n              }\n            },\n            ___scope(scope) {\n              const parentBranchId = scope[\"#ClosestBranchId\" /* ClosestBranchId */] || parentBranchIds.get(scopeId);\n              if (parentBranchId) {\n                scope.___closestBranch = scopeLookup[parentBranchId];\n              }\n              if (branchIds.has(scopeId)) {\n                const branch = scope;\n                const parentBranch = branch.___closestBranch;\n                scope.___closestBranch = branch;\n                if (parentBranch) {\n                  branch.___parentBranch = parentBranch;\n                  (parentBranch.___branchScopes ||= /* @__PURE__ */ new Set()).add(branch);\n                }\n              }\n            }\n          };\n        })();\n        let $global;\n        let lastScopeId = 0;\n        let lastEffect;\n        let visits;\n        let resumes;\n        let scopeId;\n        let visit;\n        let visitText;\n        let visitData;\n        let visitDataIndex;\n        let visitToken;\n        let visitScope;\n        render.w = () => {\n          try {\n            walk2();\n            isResuming = 1;\n            for (visit of visits = render.v) {\n              visitText = visit.data;\n              visitDataIndex = visitText.indexOf(\" \") + 1;\n              scopeId = +visitText.slice(\n                commentPrefixLen + 1,\n                visitDataIndex ? visitDataIndex - 1 : visitText.length\n              );\n              visitData = visitDataIndex ? visitText.slice(visitDataIndex) : \"\";\n              visitToken = visitText[commentPrefixLen];\n              visitScope = scopeLookup[scopeId] ||= {\n                ___id: scopeId\n              };\n              if (visitToken === \"*\" /* Node */) {\n                visitScope[\"Getter:\" /* Getter */ + visitData] = /* @__PURE__ */ ((node) => () => node)(visitScope[visitData] = visit.previousSibling);\n              } else if (branches) {\n                branches.___visit();\n              }\n            }\n            for (const serialized of resumes = render.r || []) {\n              if (typeof serialized === \"string\") {\n                lastEffect = serialized;\n              } else if (typeof serialized === \"number\") {\n                registeredValues[lastEffect](\n                  scopeLookup[serialized] ||= {\n                    ___id: scopeId\n                  },\n                  scopeLookup[serialized]\n                );\n              } else {\n                for (const scope of serialized(serializeContext)) {\n                  if (!$global) {\n                    $global = scope || {};\n                    $global.runtimeId = runtimeId;\n                    $global.renderId = renderId;\n                    $global.___nextScopeId = 1e6;\n                  } else if (typeof scope === \"number\") {\n                    lastScopeId += scope;\n                  } else {\n                    scopeId = ++lastScopeId;\n                    scope.$global = $global;\n                    scope.___id = scopeId;\n                    if (scopeLookup[scopeId] !== scope) {\n                      scopeLookup[scopeId] = Object.assign(\n                        scope,\n                        scopeLookup[scopeId]\n                      );\n                    }\n                    if (branches) {\n                      branches.___scope(scope);\n                    }\n                    if (true) {\n                      scope.___debugId = \"server-\" + scopeId;\n                    }\n                  }\n                }\n              }\n            }\n          } finally {\n            isResuming = visits.length = resumes.length = 0;\n          }\n        };\n        return render;\n      }\n    });\n  };\n  if (renders) {\n    initRuntime(renders);\n    for (const renderId in renders) {\n      resumeRender(renderId).w();\n    }\n  } else {\n    defineRuntime({\n      configurable: true,\n      set: initRuntime\n    });\n  }\n}\nvar isResuming;\nfunction register(id, obj) {\n  registeredValues[id] = obj;\n  return obj;\n}\nfunction registerBoundSignal(id, signal) {\n  registeredValues[id] = (scope) => (value2) => signal(scope, value2);\n  return signal;\n}\nfunction getRegisteredWithScope(id, scope) {\n  const val = registeredValues[id];\n  return scope ? val(scope) : val;\n}\nfunction nodeRef(id, key) {\n  return register(id, (scope) => () => scope[key]());\n}\n\n// src/dom/controllable.ts\nfunction controllable_input_checked(scope, nodeAccessor, checked, checkedChange) {\n  setCheckboxValue(\n    scope,\n    nodeAccessor,\n    0 /* InputChecked */,\n    normalizeBoolProp(checked),\n    checkedChange\n  );\n}\nfunction controllable_input_checked_effect(scope, nodeAccessor) {\n  const el = scope[nodeAccessor];\n  syncControllable(el, \"input\", hasCheckboxChanged, () => {\n    const checkedChange = scope[\"ControlledHandler:\" /* ControlledHandler */ + nodeAccessor];\n    if (checkedChange) {\n      const newValue = el.checked;\n      el.checked = !newValue;\n      checkedChange(newValue);\n      run();\n    }\n  });\n}\nfunction controllable_input_checkedValue(scope, nodeAccessor, checkedValue, checkedValueChange, value2) {\n  scope[\"ControlledValue:\" /* ControlledValue */ + nodeAccessor] = checkedValue;\n  attr(scope[nodeAccessor], \"value\", value2);\n  setCheckboxValue(\n    scope,\n    nodeAccessor,\n    1 /* InputCheckedValue */,\n    Array.isArray(checkedValue) ? checkedValue.includes(value2) : checkedValue === value2,\n    checkedValueChange\n  );\n}\nfunction controllable_input_checkedValue_effect(scope, nodeAccessor) {\n  const el = scope[nodeAccessor];\n  syncControllable(el, \"input\", hasCheckboxChanged, () => {\n    const checkedValueChange = scope[\"ControlledHandler:\" /* ControlledHandler */ + nodeAccessor];\n    if (checkedValueChange) {\n      const oldValue = scope[\"ControlledValue:\" /* ControlledValue */ + nodeAccessor];\n      const newValue = Array.isArray(oldValue) ? updateList(oldValue, el.value, el.checked) : el.checked ? el.value : void 0;\n      if (el.name && el.type[0] === \"r\") {\n        for (const radio of el.getRootNode().querySelectorAll(\n          `[type=radio][name=${CSS.escape(el.name)}]`\n        )) {\n          if (radio.form === el.form) {\n            radio.checked = Array.isArray(oldValue) ? oldValue.includes(radio.value) : oldValue === radio.value;\n          }\n        }\n      } else {\n        el.checked = !el.checked;\n      }\n      checkedValueChange(newValue);\n      run();\n    }\n  });\n}\nfunction controllable_input_value(scope, nodeAccessor, value2, valueChange) {\n  const el = scope[nodeAccessor];\n  const normalizedValue = normalizeStrProp(value2);\n  scope[\"ControlledHandler:\" /* ControlledHandler */ + nodeAccessor] = valueChange;\n  if (valueChange) {\n    scope[\"ControlledType:\" /* ControlledType */ + nodeAccessor] = 0 /* InputChecked */;\n    scope[\"ControlledValue:\" /* ControlledValue */ + nodeAccessor] = value2;\n    if (el.isConnected) {\n      setValueAndUpdateSelection(el, normalizedValue);\n    } else {\n      el.defaultValue = normalizedValue;\n    }\n  } else {\n    scope[\"ControlledType:\" /* ControlledType */ + nodeAccessor] = 5 /* None */;\n    el.defaultValue = normalizedValue;\n  }\n}\nfunction controllable_input_value_effect(scope, nodeAccessor) {\n  const el = scope[nodeAccessor];\n  if (isResuming) {\n    scope[\"ControlledValue:\" /* ControlledValue */ + nodeAccessor] = el.defaultValue;\n  }\n  syncControllable(el, \"input\", hasValueChanged, (ev) => {\n    const valueChange = scope[\"ControlledHandler:\" /* ControlledHandler */ + nodeAccessor];\n    if (valueChange) {\n      inputType = ev?.inputType;\n      valueChange(el.value);\n      run();\n      setValueAndUpdateSelection(\n        el,\n        scope[\"ControlledValue:\" /* ControlledValue */ + nodeAccessor]\n      );\n      inputType = \"\";\n    }\n  });\n}\nfunction controllable_select_value(scope, nodeAccessor, value2, valueChange) {\n  scope[\"ControlledHandler:\" /* ControlledHandler */ + nodeAccessor] = valueChange;\n  if (valueChange) {\n    scope[\"ControlledType:\" /* ControlledType */ + nodeAccessor] = 3 /* SelectValue */;\n    scope[\"ControlledValue:\" /* ControlledValue */ + nodeAccessor] = value2;\n  } else {\n    scope[\"ControlledType:\" /* ControlledType */ + nodeAccessor] = 5 /* None */;\n  }\n  pendingEffects.unshift(\n    () => setSelectOptions(\n      scope[nodeAccessor],\n      value2,\n      valueChange\n    ),\n    scope\n  );\n}\nfunction controllable_select_value_effect(scope, nodeAccessor) {\n  const el = scope[nodeAccessor];\n  const onChange = () => {\n    const valueChange = scope[\"ControlledHandler:\" /* ControlledHandler */ + nodeAccessor];\n    if (valueChange) {\n      const newValue = Array.isArray(\n        scope[\"ControlledValue:\" /* ControlledValue */ + nodeAccessor]\n      ) ? Array.from(el.selectedOptions, toValueProp) : el.value;\n      setSelectOptions(\n        el,\n        scope[\"ControlledValue:\" /* ControlledValue */ + nodeAccessor],\n        valueChange\n      );\n      valueChange(newValue);\n      run();\n    }\n  };\n  if (!el._) {\n    new MutationObserver(() => {\n      const value2 = scope[\"ControlledValue:\" /* ControlledValue */ + nodeAccessor];\n      if (Array.isArray(value2) ? value2.length !== el.selectedOptions.length || value2.some((value3, i) => value3 != el.selectedOptions[i].value) : el.value != value2) {\n        onChange();\n      }\n    }).observe(el, {\n      childList: true,\n      subtree: true\n    });\n  }\n  syncControllable(el, \"input\", hasSelectChanged, onChange);\n}\nfunction setSelectOptions(el, value2, valueChange) {\n  if (Array.isArray(value2)) {\n    for (const opt of el.options) {\n      const selected = value2.includes(opt.value);\n      if (valueChange) {\n        opt.selected = selected;\n      } else {\n        opt.defaultSelected = selected;\n      }\n    }\n  } else {\n    const normalizedValue = normalizeStrProp(value2);\n    if (valueChange) {\n      el.value = normalizedValue;\n    } else {\n      for (const opt of el.options) {\n        opt.defaultSelected = opt.value === normalizedValue;\n      }\n    }\n  }\n}\nfunction controllable_detailsOrDialog_open(scope, nodeAccessor, open, openChange) {\n  scope[\"ControlledHandler:\" /* ControlledHandler */ + nodeAccessor] = openChange;\n  if (openChange) {\n    scope[\"ControlledType:\" /* ControlledType */ + nodeAccessor] = 4 /* DetailsOrDialogOpen */;\n  } else {\n    scope[\"ControlledType:\" /* ControlledType */ + nodeAccessor] = 5 /* None */;\n  }\n  scope[nodeAccessor].open = scope[\"ControlledValue:\" /* ControlledValue */ + nodeAccessor] = normalizeBoolProp(open);\n}\nfunction controllable_detailsOrDialog_open_effect(scope, nodeAccessor) {\n  const el = scope[nodeAccessor];\n  const hasChanged = () => el.open !== scope[\"ControlledValue:\" /* ControlledValue */ + nodeAccessor];\n  syncControllable(\n    el,\n    el.tagName === \"DIALOG\" ? \"close\" : \"toggle\",\n    hasChanged,\n    () => {\n      const openChange = scope[\"ControlledHandler:\" /* ControlledHandler */ + nodeAccessor];\n      if (openChange && hasChanged()) {\n        const newValue = el.open;\n        el.open = !newValue;\n        openChange(newValue);\n        run();\n      }\n    }\n  );\n}\nvar inputType = \"\";\nfunction setValueAndUpdateSelection(el, value2) {\n  if (el.value !== value2) {\n    const updatedPosition = resolveCursorPosition(\n      inputType,\n      el.getRootNode().activeElement === el && el.selectionStart,\n      el.value,\n      el.value = value2\n    );\n    if (~updatedPosition) {\n      el.setSelectionRange(updatedPosition, updatedPosition);\n    }\n  }\n}\nfunction setCheckboxValue(scope, nodeAccessor, type, checked, checkedChange) {\n  scope[\"ControlledHandler:\" /* ControlledHandler */ + nodeAccessor] = checkedChange;\n  if (checkedChange) {\n    scope[\"ControlledType:\" /* ControlledType */ + nodeAccessor] = type;\n    scope[nodeAccessor].checked = checked;\n  } else {\n    scope[\"ControlledType:\" /* ControlledType */ + nodeAccessor] = 5 /* None */;\n    scope[nodeAccessor].defaultChecked = checked;\n  }\n}\nvar controllableDelegate = createDelegator();\nfunction syncControllable(el, event, hasChanged, onChange) {\n  if (!el._) {\n    controllableDelegate(el, event, handleChange);\n    if (el.form) {\n      controllableDelegate(el.form, \"reset\", handleFormReset);\n    }\n    if (isResuming && hasChanged(el)) {\n      queueMicrotask(onChange);\n    }\n  }\n  el._ = onChange;\n}\nfunction handleChange(ev) {\n  ev.target._?.(ev);\n}\nfunction handleFormReset(ev) {\n  const handlers = [];\n  for (const el of ev.target.elements) {\n    if (el._ && hasFormElementChanged(el)) {\n      handlers.push(el._);\n    }\n  }\n  requestAnimationFrame(() => {\n    if (!ev.defaultPrevented) {\n      for (const change of handlers) {\n        change();\n      }\n    }\n  });\n}\nfunction hasValueChanged(el) {\n  return el.value !== el.defaultValue;\n}\nfunction hasCheckboxChanged(el) {\n  return el.checked !== el.defaultChecked;\n}\nfunction hasSelectChanged(el) {\n  for (const opt of el.options) {\n    if (opt.selected !== opt.defaultSelected) {\n      return true;\n    }\n  }\n}\nfunction hasFormElementChanged(el) {\n  return el.options ? hasSelectChanged(el) : hasValueChanged(el) || hasCheckboxChanged(el);\n}\nfunction normalizeStrProp(value2) {\n  return normalizeAttrValue(value2) || \"\";\n}\nfunction normalizeBoolProp(value2) {\n  return value2 != null && value2 !== false;\n}\nfunction updateList(arr, val, push) {\n  const index = arr.indexOf(val);\n  return (push ? !~index && [...arr, val] : ~index && arr.slice(0, index).concat(arr.slice(index + 1))) || arr;\n}\nfunction toValueProp(it) {\n  return it.value;\n}\n\n// src/dom/parse-html.ts\nvar parsers = {};\nfunction parseHTML(html2, ns) {\n  const parser = parsers[ns] ||= document.createElementNS(ns, \"template\");\n  parser.innerHTML = html2;\n  return parser.content || parser;\n}\n\n// src/dom/scope.ts\nfunction createScope($global, closestBranch) {\n  const scope = {\n    ___id: $global.___nextScopeId++,\n    ___creating: 1,\n    ___closestBranch: closestBranch,\n    $global\n  };\n  pendingScopes.push(scope);\n  return scope;\n}\nfunction skipScope(scope) {\n  return scope.$global.___nextScopeId++;\n}\nfunction findBranchWithKey(scope, key) {\n  let branch = scope.___closestBranch;\n  while (branch && !branch[key]) {\n    branch = branch.___parentBranch;\n  }\n  return branch;\n}\nfunction destroyBranch(branch) {\n  branch.___parentBranch?.___branchScopes?.delete(branch);\n  destroyNestedBranches(branch);\n}\nfunction destroyNestedBranches(branch) {\n  branch.___destroyed = 1;\n  branch.___branchScopes?.forEach(destroyNestedBranches);\n  branch.___abortScopes?.forEach((scope) => {\n    for (const id in scope.___abortControllers) {\n      scope.___abortControllers[id]?.abort();\n    }\n  });\n}\nfunction removeAndDestroyBranch(branch) {\n  destroyBranch(branch);\n  removeChildNodes(branch.___startNode, branch.___endNode);\n}\nfunction insertBranchBefore(branch, parentNode, nextSibling) {\n  insertChildNodes(\n    parentNode,\n    nextSibling,\n    branch.___startNode,\n    branch.___endNode\n  );\n}\nfunction tempDetachBranch(branch) {\n  const fragment = new DocumentFragment();\n  fragment.namespaceURI = branch.___startNode.parentNode.namespaceURI;\n  insertChildNodes(fragment, null, branch.___startNode, branch.___endNode);\n}\n\n// src/dom/schedule.ts\nvar runTask;\nvar isScheduled;\nvar channel;\nfunction schedule() {\n  if (!isScheduled) {\n    if (true) {\n      if (console.createTask) {\n        const task = console.createTask(\"queue\");\n        runTask = () => task.run(run);\n      } else {\n        runTask = run;\n      }\n    }\n    isScheduled = 1;\n    queueMicrotask(flushAndWaitFrame);\n  }\n}\nfunction flushAndWaitFrame() {\n  if (true) {\n    runTask();\n  } else {\n    run();\n  }\n  requestAnimationFrame(triggerMacroTask);\n}\nfunction triggerMacroTask() {\n  if (!channel) {\n    channel = new MessageChannel();\n    channel.port1.onmessage = () => {\n      isScheduled = 0;\n      if (true) {\n        const run2 = runTask;\n        runTask = void 0;\n        run2();\n      } else {\n        run();\n      }\n    };\n  }\n  channel.port2.postMessage(0);\n}\n\n// src/dom/signals.ts\nfunction state(valueAccessor, fn) {\n  if (true) {\n    var id = +valueAccessor.slice(\n      valueAccessor.lastIndexOf(\"/\") + 1\n    );\n    valueAccessor = valueAccessor.slice(\n      0,\n      valueAccessor.lastIndexOf(\"/\")\n    );\n  }\n  const valueChangeAccessor = \"TagVariableChange:\" /* TagVariableChange */ + valueAccessor;\n  const update = (scope, value2) => {\n    if (scope[valueAccessor] !== value2) {\n      scope[valueAccessor] = value2;\n      fn(scope, value2);\n    }\n  };\n  return (scope, value2, valueChange) => {\n    if (rendering) {\n      if ((scope[valueChangeAccessor] = valueChange) && scope[valueAccessor] !== value2 || !(valueAccessor in scope)) {\n        scope[valueAccessor] = value2;\n        fn(scope, value2);\n      }\n    } else if (scope[valueChangeAccessor]) {\n      scope[valueChangeAccessor](value2);\n    } else {\n      schedule();\n      queueRender(\n        scope,\n        update,\n        true ? id : valueAccessor,\n        value2\n      );\n    }\n    return value2;\n  };\n}\nfunction value(valueAccessor, fn = () => {\n}) {\n  return (scope, value2) => {\n    if (!(valueAccessor in scope) || scope[valueAccessor] !== value2) {\n      scope[valueAccessor] = value2;\n      fn(scope, value2);\n    }\n  };\n}\nfunction intersection(id, fn, defaultPending = 1, scopeIdAccessor = /* @__KEY__ */ \"___id\") {\n  return (scope) => {\n    if (scope.___creating) {\n      if (scope[id] === void 0) {\n        scope[id] = defaultPending;\n      } else if (!--scope[id]) {\n        fn(scope);\n      }\n    } else {\n      queueRender(scope, fn, id, 0, scope[scopeIdAccessor]);\n    }\n  };\n}\nfunction loopClosure(valueAccessor, ownerLoopNodeAccessor, fn) {\n  const childSignal = closure(valueAccessor, fn);\n  const loopScopeAccessor = \"LoopScopeArray:\" /* LoopScopeArray */ + ownerLoopNodeAccessor;\n  const loopScopeMapAccessor = \"LoopScopeMap:\" /* LoopScopeMap */ + ownerLoopNodeAccessor;\n  const ownerSignal = (ownerScope) => {\n    const scopes = ownerScope[loopScopeAccessor] ||= ownerScope[loopScopeMapAccessor] ? [...ownerScope[loopScopeMapAccessor].values()] : [];\n    const [firstScope] = scopes;\n    if (firstScope) {\n      queueRender(\n        ownerScope,\n        () => {\n          for (const scope of scopes) {\n            if (!scope.___creating && !scope.___destroyed) {\n              childSignal(scope);\n            }\n          }\n        },\n        -1,\n        0,\n        firstScope.___id\n      );\n    }\n  };\n  ownerSignal._ = childSignal;\n  return ownerSignal;\n}\nfunction conditionalClosure(valueAccessor, ownerConditionalNodeAccessor, branch, fn) {\n  const childSignal = closure(valueAccessor, fn);\n  const scopeAccessor = \"ConditionalScope:\" /* ConditionalScope */ + ownerConditionalNodeAccessor;\n  const branchAccessor = \"ConditionalRenderer:\" /* ConditionalRenderer */ + ownerConditionalNodeAccessor;\n  const ownerSignal = (scope) => {\n    const ifScope = scope[scopeAccessor];\n    if (ifScope && !ifScope.___creating && scope[branchAccessor] === branch) {\n      queueRender(ifScope, childSignal, -1);\n    }\n  };\n  ownerSignal._ = childSignal;\n  return ownerSignal;\n}\nfunction subscribeToScopeSet(ownerScope, accessor, scope) {\n  const subscribers = ownerScope[accessor] ||= /* @__PURE__ */ new Set();\n  if (!subscribers.has(scope)) {\n    subscribers.add(scope);\n    getAbortSignal(scope, -1).addEventListener(\n      \"abort\",\n      () => ownerScope[accessor].delete(scope)\n    );\n  }\n}\nfunction dynamicClosure(...closureSignals) {\n  const [{ ___scopeInstancesAccessor, ___signalIndexAccessor }] = closureSignals;\n  for (let i = closureSignals.length; i--; ) {\n    closureSignals[i].___index = i;\n  }\n  return (scope) => {\n    if (scope[___scopeInstancesAccessor]) {\n      for (const childScope of scope[___scopeInstancesAccessor]) {\n        if (!childScope.___creating) {\n          queueRender(\n            childScope,\n            closureSignals[childScope[___signalIndexAccessor]],\n            -1\n          );\n        }\n      }\n    }\n  };\n}\nfunction dynamicClosureRead(valueAccessor, fn, getOwnerScope) {\n  const childSignal = closure(valueAccessor, fn, getOwnerScope);\n  const closureSignal = (scope) => {\n    scope[closureSignal.___signalIndexAccessor] = closureSignal.___index;\n    childSignal(scope);\n    subscribeToScopeSet(\n      getOwnerScope ? getOwnerScope(scope) : scope[\"_\" /* Owner */],\n      closureSignal.___scopeInstancesAccessor,\n      scope\n    );\n  };\n  closureSignal.___scopeInstancesAccessor = \"ClosureScopes:\" /* ClosureScopes */ + valueAccessor;\n  closureSignal.___signalIndexAccessor = \"ClosureSignalIndex:\" /* ClosureSignalIndex */ + valueAccessor;\n  return closureSignal;\n}\nfunction closure(valueAccessor, fn, getOwnerScope) {\n  return (scope) => {\n    fn(\n      scope,\n      (getOwnerScope ? getOwnerScope(scope) : scope[\"_\" /* Owner */])[valueAccessor]\n    );\n  };\n}\nfunction setTagVar(scope, childAccessor, tagVarSignal2) {\n  scope[childAccessor][\"#TagVariable\" /* TagVariable */] = (value2) => tagVarSignal2(scope, value2);\n}\nvar tagVarSignal = (scope, value2) => scope[\"#TagVariable\" /* TagVariable */]?.(value2);\nfunction setTagVarChange(scope, changeHandler) {\n  scope[\"#TagVariableChange\" /* TagVariableChange */] = changeHandler;\n}\nvar tagVarSignalChange = (scope, value2) => scope[\"#TagVariableChange\" /* TagVariableChange */]?.(value2);\nvar tagIdsByGlobal = /* @__PURE__ */ new WeakMap();\nfunction nextTagId({ $global }) {\n  const id = tagIdsByGlobal.get($global) || 0;\n  tagIdsByGlobal.set($global, id + 1);\n  return \"c\" + $global.runtimeId + $global.renderId + id.toString(36);\n}\nfunction effect(id, fn) {\n  register(id, fn);\n  return (scope) => {\n    queueEffect(scope, fn);\n  };\n}\nfunction* traverseAllHoisted(scope, path, curIndex = path.length - 1) {\n  if (scope) {\n    if (Symbol.iterator in scope) {\n      for (const s of scope instanceof Map ? scope.values() : scope) {\n        yield* traverseAllHoisted(s, path, curIndex);\n      }\n    } else if (curIndex) {\n      yield* traverseAllHoisted(scope[path[curIndex]], path, curIndex - 1);\n    } else {\n      yield scope[path[0]];\n    }\n  }\n}\nfunction hoist(...path) {\n  return (scope) => {\n    const getOne = (...args) => iterator().next().value(...args);\n    const iterator = getOne[Symbol.iterator] = () => traverseAllHoisted(scope, path);\n    return getOne;\n  };\n}\n\n// src/dom/walker.ts\nvar walker = /* @__PURE__ */ document.createTreeWalker(document);\nfunction walk(startNode, walkCodes, branch) {\n  walker.currentNode = startNode;\n  walkInternal(0, walkCodes, branch);\n}\nfunction walkInternal(currentWalkIndex, walkCodes, scope) {\n  let value2;\n  let storedMultiplier = 0;\n  let currentMultiplier = 0;\n  let currentScopeIndex = 0;\n  for (; currentWalkIndex < walkCodes.length; ) {\n    value2 = walkCodes.charCodeAt(currentWalkIndex++);\n    currentMultiplier = storedMultiplier;\n    storedMultiplier = 0;\n    if (value2 === 32 /* Get */) {\n      const node = walker.currentNode;\n      scope[true ? getDebugKey(currentScopeIndex, walker.currentNode) : currentScopeIndex] = node;\n      scope[\"Getter:\" /* Getter */ + (true ? getDebugKey(currentScopeIndex++, walker.currentNode) : currentScopeIndex++)] = () => node;\n    } else if (value2 === 37 /* Replace */ || value2 === 49 /* DynamicTagWithVar */) {\n      walker.currentNode.replaceWith(\n        walker.currentNode = scope[true ? getDebugKey(currentScopeIndex++, \"#text\") : currentScopeIndex++] = new Text()\n      );\n      if (value2 === 49 /* DynamicTagWithVar */) {\n        scope[true ? getDebugKey(currentScopeIndex++, \"#scopeOffset\") : currentScopeIndex++] = skipScope(scope);\n      }\n    } else if (value2 === 38 /* EndChild */) {\n      return currentWalkIndex;\n    } else if (value2 === 47 /* BeginChild */ || value2 === 48 /* BeginChildWithVar */) {\n      currentWalkIndex = walkInternal(\n        currentWalkIndex,\n        walkCodes,\n        scope[true ? getDebugKey(currentScopeIndex++, \"#childScope\") : currentScopeIndex++] = createScope(scope.$global, scope.___closestBranch)\n      );\n      if (value2 === 48 /* BeginChildWithVar */) {\n        scope[true ? getDebugKey(currentScopeIndex++, \"#scopeOffset\") : currentScopeIndex++] = skipScope(scope);\n      }\n    } else if (value2 < 91 /* NextEnd */ + 1) {\n      value2 = 20 /* Next */ * currentMultiplier + value2 - 67 /* Next */;\n      while (value2--) {\n        walker.nextNode();\n      }\n    } else if (value2 < 106 /* OverEnd */ + 1) {\n      value2 = 10 /* Over */ * currentMultiplier + value2 - 97 /* Over */;\n      while (value2--) {\n        walker.nextSibling();\n      }\n    } else if (value2 < 116 /* OutEnd */ + 1) {\n      value2 = 10 /* Out */ * currentMultiplier + value2 - 107 /* Out */;\n      while (value2--) {\n        walker.parentNode();\n      }\n      walker.nextSibling();\n    } else {\n      if (value2 < 117 /* Multiplier */ || value2 > 126 /* MultiplierEnd */) {\n        throw new Error(`Unknown walk code: ${value2}`);\n      }\n      storedMultiplier = currentMultiplier * 10 /* Multiplier */ + value2 - 117 /* Multiplier */;\n    }\n  }\n}\nfunction getDebugKey(index, node) {\n  if (typeof node === \"string\") {\n    return `${node}/${index}`;\n  } else if (node.nodeType === 3 /* Text */) {\n    return `#text/${index}`;\n  } else if (node.nodeType === 8 /* Comment */) {\n    return `#comment/${index}`;\n  } else if (node.nodeType === 1 /* Element */) {\n    return `#${node.tagName.toLowerCase()}/${index}`;\n  }\n  return index;\n}\n\n// src/dom/renderer.ts\nfunction createBranch($global, renderer, parentScope, parentNode) {\n  const branch = createScope($global);\n  const parentBranch = parentScope?.___closestBranch;\n  branch[\"_\" /* Owner */] = renderer.___owner || parentScope;\n  branch.___closestBranch = branch;\n  if (parentBranch) {\n    branch.___parentBranch = parentBranch;\n    (parentBranch.___branchScopes ||= /* @__PURE__ */ new Set()).add(branch);\n  }\n  if (true) {\n    branch.___renderer = renderer;\n  }\n  renderer.___clone?.(\n    branch,\n    parentNode.namespaceURI\n  );\n  return branch;\n}\nfunction createAndSetupBranch($global, renderer, parentScope, parentNode) {\n  return setupBranch(\n    renderer,\n    createBranch($global, renderer, parentScope, parentNode)\n  );\n}\nfunction setupBranch(renderer, branch) {\n  if (renderer.___setup) {\n    queueRender(branch, renderer.___setup, -1);\n  }\n  return branch;\n}\nfunction createContent(id, template, walks, setup, params, dynamicScopesAccessor) {\n  walks = walks ? walks.replace(/[^\\0-1]+$/, \"\") : \"\";\n  setup = setup ? setup._ || setup : void 0;\n  params ||= void 0;\n  const clone = template ? (branch, ns) => {\n    ((cloneCache[ns] ||= {})[template] ||= createCloneableHTML(\n      template,\n      ns\n    ))(branch, walks);\n  } : (branch) => {\n    walk(\n      branch.___startNode = branch.___endNode = new Text(),\n      walks,\n      branch\n    );\n  };\n  return (owner) => {\n    return {\n      ___id: id,\n      ___clone: clone,\n      ___owner: owner,\n      ___setup: setup,\n      ___params: params,\n      ___accessor: dynamicScopesAccessor\n    };\n  };\n}\nfunction registerContent(id, template, walks, setup, params, dynamicScopesAccessor) {\n  return register(\n    id,\n    createContent(id, template, walks, setup, params, dynamicScopesAccessor)\n  );\n}\nfunction localClosures(renderer, closureFns) {\n  const closureSignals = {};\n  for (const key in closureFns) {\n    closureSignals[key] = value(key, closureFns[key]);\n  }\n  return (owner, closureValues) => {\n    const instance = renderer(owner);\n    instance.___localClosures = closureSignals;\n    instance.___localClosureValues = closureValues;\n    return instance;\n  };\n}\nfunction createRenderer(template, walks, setup, params) {\n  return createContent(\"\", template, walks, setup, params)();\n}\nvar cloneCache = {};\nfunction createCloneableHTML(html2, ns) {\n  const { firstChild, lastChild } = parseHTML(html2, ns);\n  const parent = document.createElementNS(ns, \"t\");\n  insertChildNodes(parent, null, firstChild, lastChild);\n  return firstChild === lastChild && firstChild.nodeType < 8 /* Comment */ ? (branch, walks) => {\n    walk(\n      branch.___startNode = branch.___endNode = firstChild.cloneNode(true),\n      walks,\n      branch\n    );\n  } : (branch, walks) => {\n    const clone = parent.cloneNode(true);\n    walk(clone.firstChild, walks, branch);\n    branch.___startNode = clone.firstChild;\n    branch.___endNode = clone.lastChild;\n  };\n}\n\n// src/dom/dom.ts\nfunction attr(element, name, value2) {\n  setAttribute(element, name, normalizeAttrValue(value2));\n}\nfunction setAttribute(element, name, value2) {\n  if (element.getAttribute(name) != value2) {\n    if (value2 === void 0) {\n      element.removeAttribute(name);\n    } else {\n      element.setAttribute(name, value2);\n    }\n  }\n}\nfunction classAttr(element, value2) {\n  setAttribute(element, \"class\", classValue(value2) || void 0);\n}\nfunction classItems(element, items) {\n  for (const key in items) {\n    classItem(element, key, items[key]);\n  }\n}\nfunction classItem(element, name, value2) {\n  element.classList.toggle(name, !!value2);\n}\nfunction styleAttr(element, value2) {\n  setAttribute(element, \"style\", styleValue(value2) || void 0);\n}\nfunction styleItems(element, items) {\n  for (const key in items) {\n    styleItem(element, key, items[key]);\n  }\n}\nfunction styleItem(element, name, value2) {\n  element.style.setProperty(name, value2 || value2 === 0 ? value2 + \"\" : \"\");\n}\nfunction data(node, value2) {\n  const normalizedValue = normalizeString(value2);\n  if (node.data !== normalizedValue) {\n    node.data = normalizedValue;\n  }\n}\nfunction textContent(node, value2) {\n  const normalizedValue = normalizeString(value2);\n  if (node.textContent !== normalizedValue) {\n    node.textContent = normalizedValue;\n  }\n}\nfunction attrs(scope, nodeAccessor, nextAttrs) {\n  const el = scope[nodeAccessor];\n  for (let i = el.attributes.length; i--; ) {\n    const { name } = el.attributes.item(i);\n    if (!(nextAttrs && (name in nextAttrs || hasAttrAlias(el, name, nextAttrs)))) {\n      el.removeAttribute(name);\n    }\n  }\n  attrsInternal(scope, nodeAccessor, nextAttrs);\n}\nfunction attrsAndContent(scope, nodeAccessor, nextAttrs) {\n  attrs(scope, nodeAccessor, nextAttrs);\n  insertContent(scope, nodeAccessor, nextAttrs?.content);\n}\nfunction hasAttrAlias(element, attr2, nextAttrs) {\n  return attr2 === \"checked\" && element.tagName === \"INPUT\" && \"checkedValue\" in nextAttrs;\n}\nfunction partialAttrs(scope, nodeAccessor, nextAttrs, skip) {\n  const el = scope[nodeAccessor];\n  const partial = {};\n  for (let i = el.attributes.length; i--; ) {\n    const { name } = el.attributes.item(i);\n    if (!skip[name] && !(nextAttrs && name in nextAttrs)) {\n      el.removeAttribute(name);\n    }\n  }\n  for (const key in nextAttrs) {\n    if (!skip[key]) partial[key] = nextAttrs[key];\n  }\n  attrsInternal(scope, nodeAccessor, partial);\n}\nfunction partialAttrsAndContent(scope, nodeAccessor, nextAttrs, skip) {\n  partialAttrs(scope, nodeAccessor, nextAttrs, skip);\n  insertContent(scope, nodeAccessor, nextAttrs?.content);\n}\nfunction attrsInternal(scope, nodeAccessor, nextAttrs) {\n  const el = scope[nodeAccessor];\n  let events;\n  let skip;\n  switch (el.tagName) {\n    case \"INPUT\":\n      if (\"checked\" in nextAttrs || \"checkedChange\" in nextAttrs) {\n        controllable_input_checked(\n          scope,\n          nodeAccessor,\n          nextAttrs.checked,\n          nextAttrs.checkedChange\n        );\n      } else if (\"checkedValue\" in nextAttrs || \"checkedValueChange\" in nextAttrs) {\n        controllable_input_checkedValue(\n          scope,\n          nodeAccessor,\n          nextAttrs.checkedValue,\n          nextAttrs.checkedValueChange,\n          nextAttrs.value\n        );\n      } else if (\"value\" in nextAttrs || \"valueChange\" in nextAttrs) {\n        controllable_input_value(\n          scope,\n          nodeAccessor,\n          nextAttrs.value,\n          nextAttrs.valueChange\n        );\n      } else {\n        break;\n      }\n      skip = /^(?:value|checked(?:Value)?)(?:Change)?$/;\n      break;\n    case \"SELECT\":\n      if (\"value\" in nextAttrs || \"valueChange\" in nextAttrs) {\n        controllable_select_value(\n          scope,\n          nodeAccessor,\n          nextAttrs.value,\n          nextAttrs.valueChange\n        );\n        skip = /^value(?:Change)?$/;\n      }\n      break;\n    case \"TEXTAREA\":\n      if (\"value\" in nextAttrs || \"valueChange\" in nextAttrs) {\n        controllable_input_value(\n          scope,\n          nodeAccessor,\n          nextAttrs.value,\n          nextAttrs.valueChange\n        );\n        skip = /^value(?:Change)?$/;\n      }\n      break;\n    case \"DETAILS\":\n    case \"DIALOG\":\n      if (\"open\" in nextAttrs || \"openChange\" in nextAttrs) {\n        controllable_detailsOrDialog_open(\n          scope,\n          nodeAccessor,\n          nextAttrs.open,\n          nextAttrs.openChange\n        );\n        skip = /^open(?:Change)?$/;\n      }\n      break;\n  }\n  for (const name in nextAttrs) {\n    const value2 = nextAttrs[name];\n    switch (name) {\n      case \"class\":\n        classAttr(el, value2);\n        break;\n      case \"style\":\n        styleAttr(el, value2);\n        break;\n      case \"content\": {\n        break;\n      }\n      default: {\n        if (isEventHandler(name)) {\n          (events ||= scope[\"EventAttributes:\" /* EventAttributes */ + nodeAccessor] = {})[getEventHandlerName(name)] = value2;\n        } else if (!skip?.test(name)) {\n          attr(el, name, value2);\n        }\n      }\n    }\n  }\n}\nfunction insertContent(scope, nodeAccessor, value2) {\n  const content = normalizeClientRender(value2);\n  const rendererAccessor = \"ConditionalRenderer:\" /* ConditionalRenderer */ + nodeAccessor;\n  if (scope[rendererAccessor] !== (scope[rendererAccessor] = content?.___id)) {\n    setConditionalRenderer(scope, nodeAccessor, content, createAndSetupBranch);\n    if (content?.___accessor) {\n      subscribeToScopeSet(\n        content.___owner,\n        content.___accessor,\n        scope[\"ConditionalScope:\" /* ConditionalScope */ + nodeAccessor]\n      );\n    }\n  }\n}\nfunction attrsEvents(scope, nodeAccessor) {\n  const el = scope[nodeAccessor];\n  const events = scope[\"EventAttributes:\" /* EventAttributes */ + nodeAccessor];\n  switch (scope[\"ControlledType:\" /* ControlledType */ + nodeAccessor]) {\n    case 0 /* InputChecked */:\n      controllable_input_checked_effect(scope, nodeAccessor);\n      break;\n    case 1 /* InputCheckedValue */:\n      controllable_input_checkedValue_effect(scope, nodeAccessor);\n      break;\n    case 2 /* InputValue */:\n      controllable_input_value_effect(scope, nodeAccessor);\n      break;\n    case 3 /* SelectValue */:\n      controllable_select_value_effect(scope, nodeAccessor);\n      break;\n    case 4 /* DetailsOrDialogOpen */:\n      controllable_detailsOrDialog_open_effect(scope, nodeAccessor);\n      break;\n  }\n  for (const name in events) {\n    on(el, name, events[name]);\n  }\n}\nfunction html(scope, value2, accessor) {\n  const firstChild = scope[accessor];\n  const parentNode = firstChild.parentNode;\n  const lastChild = scope[\"DynamicPlaceholderLastChild:\" /* DynamicPlaceholderLastChild */ + accessor] || firstChild;\n  const newContent = parseHTML(\n    value2 || value2 === 0 ? value2 + \"\" : \"\",\n    parentNode.namespaceURI\n  );\n  insertChildNodes(\n    parentNode,\n    firstChild,\n    scope[accessor] = newContent.firstChild || newContent.appendChild(new Text()),\n    scope[\"DynamicPlaceholderLastChild:\" /* DynamicPlaceholderLastChild */ + accessor] = newContent.lastChild\n  );\n  removeChildNodes(firstChild, lastChild);\n}\nfunction normalizeClientRender(value2) {\n  const renderer = normalizeDynamicRenderer(value2);\n  if (renderer) {\n    if (renderer.___id) {\n      return renderer;\n    } else if (true) {\n      throw new Error(\n        `Invalid \\`content\\` attribute. Received ${typeof value2}`\n      );\n    }\n  }\n}\nfunction props(scope, nodeIndex, index) {\n  const nextProps = scope[index];\n  const prevProps = scope[index + \"-\"];\n  const node = scope[nodeIndex];\n  if (prevProps) {\n    for (const name in prevProps) {\n      if (!(name in nextProps)) {\n        node[name] = void 0;\n      }\n    }\n  }\n  for (const name in nextProps) {\n    node[name] = nextProps[name];\n  }\n  scope[index + \"-\"] = nextProps;\n}\nfunction normalizeAttrValue(value2) {\n  if (value2 || value2 === 0) {\n    return value2 === true ? \"\" : value2 + \"\";\n  }\n}\nfunction normalizeString(value2) {\n  return value2 || value2 === 0 ? value2 + \"\" : \"\\u200D\";\n}\nfunction lifecycle(scope, index, thisObj) {\n  const instance = scope[index];\n  if (instance) {\n    Object.assign(instance, thisObj);\n    instance.onUpdate?.();\n  } else {\n    scope[index] = thisObj;\n    thisObj.onMount?.();\n    getAbortSignal(\n      scope,\n      \"LifecycleAbortController:\" /* LifecycleAbortController */ + index\n    ).onabort = () => thisObj.onDestroy?.();\n  }\n}\nfunction removeChildNodes(startNode, endNode) {\n  const stop = endNode.nextSibling;\n  let current = startNode;\n  while (current !== stop) {\n    const next = current.nextSibling;\n    current.remove();\n    current = next;\n  }\n}\nfunction insertChildNodes(parentNode, referenceNode, startNode, endNode) {\n  parentNode.insertBefore(toInsertNode(startNode, endNode), referenceNode);\n}\nfunction toInsertNode(startNode, endNode) {\n  if (startNode === endNode) return startNode;\n  const parent = new DocumentFragment();\n  const stop = endNode.nextSibling;\n  let current = startNode;\n  while (current !== stop) {\n    const next = current.nextSibling;\n    parent.appendChild(current);\n    current = next;\n  }\n  return parent;\n}\n\n// src/dom/reconcile.ts\nvar WRONG_POS = 2147483647;\nfunction reconcile(parent, oldBranches, newBranches, afterReference) {\n  let oldStart = 0;\n  let newStart = 0;\n  let oldEnd = oldBranches.length - 1;\n  let newEnd = newBranches.length - 1;\n  let oldStartBranch = oldBranches[oldStart];\n  let newStartBranch = newBranches[newStart];\n  let oldEndBranch = oldBranches[oldEnd];\n  let newEndBranch = newBranches[newEnd];\n  let i;\n  let j;\n  let k;\n  let nextSibling;\n  let oldBranch;\n  let newBranch;\n  outer: {\n    while (oldStartBranch === newStartBranch) {\n      ++oldStart;\n      ++newStart;\n      if (oldStart > oldEnd || newStart > newEnd) {\n        break outer;\n      }\n      oldStartBranch = oldBranches[oldStart];\n      newStartBranch = newBranches[newStart];\n    }\n    while (oldEndBranch === newEndBranch) {\n      --oldEnd;\n      --newEnd;\n      if (oldStart > oldEnd || newStart > newEnd) {\n        break outer;\n      }\n      oldEndBranch = oldBranches[oldEnd];\n      newEndBranch = newBranches[newEnd];\n    }\n  }\n  if (oldStart > oldEnd) {\n    if (newStart <= newEnd) {\n      k = newEnd + 1;\n      nextSibling = k < newBranches.length ? newBranches[k].___startNode : afterReference;\n      do {\n        insertBranchBefore(newBranches[newStart++], parent, nextSibling);\n      } while (newStart <= newEnd);\n    }\n  } else if (newStart > newEnd) {\n    do {\n      removeAndDestroyBranch(oldBranches[oldStart++]);\n    } while (oldStart <= oldEnd);\n  } else {\n    const oldLength = oldEnd - oldStart + 1;\n    const newLength = newEnd - newStart + 1;\n    const aNullable = oldBranches;\n    const sources = new Array(newLength);\n    for (i = 0; i < newLength; ++i) {\n      sources[i] = -1;\n    }\n    let pos = 0;\n    let synced = 0;\n    const keyIndex = /* @__PURE__ */ new Map();\n    for (j = newStart; j <= newEnd; ++j) {\n      keyIndex.set(newBranches[j], j);\n    }\n    for (i = oldStart; i <= oldEnd && synced < newLength; ++i) {\n      oldBranch = oldBranches[i];\n      j = keyIndex.get(oldBranch);\n      if (j !== void 0) {\n        pos = pos > j ? WRONG_POS : j;\n        ++synced;\n        newBranch = newBranches[j];\n        sources[j - newStart] = i;\n        aNullable[i] = null;\n      }\n    }\n    if (oldLength === oldBranches.length && synced === 0) {\n      for (; newStart < newLength; ++newStart) {\n        insertBranchBefore(newBranches[newStart], parent, afterReference);\n      }\n      for (; oldStart < oldLength; ++oldStart) {\n        removeAndDestroyBranch(oldBranches[oldStart]);\n      }\n    } else {\n      i = oldLength - synced;\n      while (i > 0) {\n        oldBranch = aNullable[oldStart++];\n        if (oldBranch !== null) {\n          removeAndDestroyBranch(oldBranch);\n          i--;\n        }\n      }\n      if (pos === WRONG_POS) {\n        const seq = longestIncreasingSubsequence(sources);\n        j = seq.length - 1;\n        k = newBranches.length;\n        for (i = newLength - 1; i >= 0; --i) {\n          if (sources[i] === -1) {\n            pos = i + newStart;\n            newBranch = newBranches[pos++];\n            nextSibling = pos < k ? newBranches[pos].___startNode : afterReference;\n            insertBranchBefore(newBranch, parent, nextSibling);\n          } else {\n            if (j < 0 || i !== seq[j]) {\n              pos = i + newStart;\n              newBranch = newBranches[pos++];\n              nextSibling = pos < k ? newBranches[pos].___startNode : afterReference;\n              insertBranchBefore(newBranch, parent, nextSibling);\n            } else {\n              --j;\n            }\n          }\n        }\n      } else if (synced !== newLength) {\n        k = newBranches.length;\n        for (i = newLength - 1; i >= 0; --i) {\n          if (sources[i] === -1) {\n            pos = i + newStart;\n            newBranch = newBranches[pos++];\n            nextSibling = pos < k ? newBranches[pos].___startNode : afterReference;\n            insertBranchBefore(newBranch, parent, nextSibling);\n          }\n        }\n      }\n    }\n  }\n}\nfunction longestIncreasingSubsequence(a) {\n  const p = a.slice();\n  const result = [0];\n  let u;\n  let v;\n  for (let i = 0, il = a.length; i < il; ++i) {\n    if (a[i] === -1) {\n      continue;\n    }\n    const j = result[result.length - 1];\n    if (a[j] < a[i]) {\n      p[i] = j;\n      result.push(i);\n      continue;\n    }\n    u = 0;\n    v = result.length - 1;\n    while (u < v) {\n      const c = (u + v) / 2 | 0;\n      if (a[result[c]] < a[i]) {\n        u = c + 1;\n      } else {\n        v = c;\n      }\n    }\n    if (a[i] < a[result[u]]) {\n      if (u > 0) {\n        p[i] = result[u - 1];\n      }\n      result[u] = i;\n    }\n  }\n  u = result.length;\n  v = result[u - 1];\n  while (u-- > 0) {\n    result[u] = v;\n    v = p[v];\n  }\n  return result;\n}\n\n// src/dom/control-flow.ts\nfunction awaitTag(nodeAccessor, renderer) {\n  const promiseAccessor = \"Promise:\" /* Promise */ + nodeAccessor;\n  const branchAccessor = \"ConditionalScope:\" /* ConditionalScope */ + nodeAccessor;\n  return (scope, promise) => {\n    const referenceNode = scope[nodeAccessor];\n    const tryWithPlaceholder = findBranchWithKey(\n      scope,\n      \"#PlaceholderContent\" /* PlaceholderContent */\n    );\n    let awaitBranch = scope[branchAccessor];\n    if (tryWithPlaceholder) {\n      placeholderShown.add(pendingEffects);\n      if (!scope[promiseAccessor] && (tryWithPlaceholder.___pendingAsyncCount = (tryWithPlaceholder.___pendingAsyncCount || 0) + 1) === 1) {\n        requestAnimationFrame(\n          () => tryWithPlaceholder.___pendingAsyncCount && runEffects(\n            prepareEffects(\n              () => queueRender(\n                tryWithPlaceholder,\n                () => {\n                  insertBranchBefore(\n                    tryWithPlaceholder[\"#PlaceholderBranch\" /* PlaceholderBranch */] = createAndSetupBranch(\n                      scope.$global,\n                      tryWithPlaceholder[\"#PlaceholderContent\" /* PlaceholderContent */],\n                      tryWithPlaceholder[\"_\" /* Owner */],\n                      tryWithPlaceholder.___startNode.parentNode\n                    ),\n                    tryWithPlaceholder.___startNode.parentNode,\n                    tryWithPlaceholder.___startNode\n                  );\n                  tempDetachBranch(tryWithPlaceholder);\n                },\n                -1\n              )\n            )\n          )\n        );\n      }\n    } else if (awaitBranch && !scope[promiseAccessor]) {\n      awaitBranch.___startNode.parentNode.insertBefore(\n        referenceNode,\n        awaitBranch.___startNode\n      );\n      tempDetachBranch(awaitBranch);\n    }\n    const thisPromise = scope[promiseAccessor] = promise.then(\n      (data2) => {\n        if (thisPromise === scope[promiseAccessor]) {\n          scope[promiseAccessor] = 0;\n          schedule();\n          queueRender(\n            scope,\n            () => {\n              if (awaitBranch) {\n                if (!tryWithPlaceholder) {\n                  referenceNode.replaceWith(\n                    awaitBranch.___startNode.parentNode\n                  );\n                }\n              } else {\n                insertBranchBefore(\n                  awaitBranch = scope[branchAccessor] = createAndSetupBranch(\n                    scope.$global,\n                    renderer,\n                    scope,\n                    referenceNode.parentNode\n                  ),\n                  referenceNode.parentNode,\n                  referenceNode\n                );\n                referenceNode.remove();\n              }\n              renderer.___params?.(awaitBranch, [data2]);\n              if (tryWithPlaceholder) {\n                placeholderShown.add(pendingEffects);\n                if (!--tryWithPlaceholder.___pendingAsyncCount) {\n                  const placeholderBranch = tryWithPlaceholder[\"#PlaceholderBranch\" /* PlaceholderBranch */];\n                  tryWithPlaceholder[\"#PlaceholderBranch\" /* PlaceholderBranch */] = 0;\n                  if (placeholderBranch) {\n                    placeholderBranch.___startNode.parentNode.insertBefore(\n                      tryWithPlaceholder.___startNode.parentNode,\n                      placeholderBranch.___startNode\n                    );\n                    removeAndDestroyBranch(placeholderBranch);\n                  }\n                  if (tryWithPlaceholder.___effects) {\n                    runEffects(tryWithPlaceholder.___effects, true);\n                  }\n                }\n              }\n            },\n            -1\n          );\n        }\n      },\n      (error) => {\n        if (thisPromise === scope[promiseAccessor]) {\n          if (tryWithPlaceholder) tryWithPlaceholder.___pendingAsyncCount = 0;\n          scope[promiseAccessor] = 0;\n          schedule();\n          queueRender(scope, renderCatch, -1, error);\n        }\n      }\n    );\n  };\n}\nfunction createTry(nodeAccessor, tryContent) {\n  const branchAccessor = \"ConditionalScope:\" /* ConditionalScope */ + nodeAccessor;\n  return (scope, input) => {\n    if (!scope[branchAccessor]) {\n      setConditionalRenderer(\n        scope,\n        nodeAccessor,\n        tryContent,\n        createAndSetupBranch\n      );\n    }\n    const branch = scope[branchAccessor];\n    if (branch) {\n      branch[\"#BranchAccessor\" /* BranchAccessor */] = nodeAccessor;\n      branch[\"#CatchContent\" /* CatchContent */] = normalizeDynamicRenderer(input.catch);\n      branch[\"#PlaceholderContent\" /* PlaceholderContent */] = normalizeDynamicRenderer(\n        input.placeholder\n      );\n    }\n  };\n}\nfunction renderCatch(scope, error) {\n  const tryWithCatch = findBranchWithKey(scope, \"#CatchContent\" /* CatchContent */);\n  if (!tryWithCatch) {\n    throw error;\n  } else {\n    const owner = tryWithCatch[\"_\" /* Owner */];\n    const placeholderBranch = tryWithCatch[\"#PlaceholderBranch\" /* PlaceholderBranch */];\n    if (placeholderBranch) {\n      tryWithCatch.___pendingAsyncCount = 0;\n      owner[\"ConditionalScope:\" /* ConditionalScope */ + tryWithCatch[\"#BranchAccessor\" /* BranchAccessor */]] = placeholderBranch;\n      destroyBranch(tryWithCatch);\n    }\n    caughtError.add(pendingEffects);\n    setConditionalRenderer(\n      owner,\n      tryWithCatch[\"#BranchAccessor\" /* BranchAccessor */],\n      tryWithCatch[\"#CatchContent\" /* CatchContent */],\n      createAndSetupBranch\n    );\n    tryWithCatch[\"#CatchContent\" /* CatchContent */].___params?.(\n      owner[\"ConditionalScope:\" /* ConditionalScope */ + tryWithCatch[\"#BranchAccessor\" /* BranchAccessor */]],\n      [error]\n    );\n  }\n}\nfunction conditional(nodeAccessor, ...branches) {\n  const branchAccessor = \"ConditionalRenderer:\" /* ConditionalRenderer */ + nodeAccessor;\n  enableBranches();\n  return (scope, newBranch) => {\n    if (newBranch !== scope[branchAccessor]) {\n      setConditionalRenderer(\n        scope,\n        nodeAccessor,\n        branches[scope[branchAccessor] = newBranch],\n        createAndSetupBranch\n      );\n    }\n  };\n}\nfunction patchDynamicTag(fn) {\n  dynamicTag = fn(dynamicTag);\n}\nvar dynamicTag = function dynamicTag2(nodeAccessor, getContent, getTagVar, inputIsArgs) {\n  const childScopeAccessor = \"ConditionalScope:\" /* ConditionalScope */ + nodeAccessor;\n  const rendererAccessor = \"ConditionalRenderer:\" /* ConditionalRenderer */ + nodeAccessor;\n  enableBranches();\n  return (scope, newRenderer, getInput) => {\n    const normalizedRenderer = normalizeDynamicRenderer(newRenderer);\n    if (scope[rendererAccessor] !== (scope[rendererAccessor] = normalizedRenderer?.___id || normalizedRenderer) || getContent && !(normalizedRenderer || scope[childScopeAccessor])) {\n      setConditionalRenderer(\n        scope,\n        nodeAccessor,\n        normalizedRenderer || (getContent ? getContent(scope) : void 0),\n        createBranchWithTagNameOrRenderer\n      );\n      if (getTagVar) {\n        setTagVar(scope, childScopeAccessor, getTagVar());\n      }\n      if (typeof normalizedRenderer === \"string\") {\n        if (getContent) {\n          const content = getContent(scope);\n          setConditionalRenderer(\n            scope[childScopeAccessor],\n            true ? `#${normalizedRenderer}/0` : 0,\n            content,\n            createAndSetupBranch\n          );\n          if (content.___accessor) {\n            subscribeToScopeSet(\n              content.___owner,\n              content.___accessor,\n              scope[childScopeAccessor][\"ConditionalScope:\" /* ConditionalScope */ + (true ? `#${normalizedRenderer}/0` : 0)]\n            );\n          }\n        }\n      } else if (normalizedRenderer?.___accessor) {\n        subscribeToScopeSet(\n          normalizedRenderer.___owner,\n          normalizedRenderer.___accessor,\n          scope[childScopeAccessor]\n        );\n      }\n    }\n    if (normalizedRenderer) {\n      const childScope = scope[childScopeAccessor];\n      const args = getInput?.();\n      if (typeof normalizedRenderer === \"string\") {\n        attrs(\n          childScope,\n          true ? `#${normalizedRenderer}/0` : 0,\n          (inputIsArgs ? args[0] : args) || {}\n        );\n      } else {\n        for (const accessor in normalizedRenderer.___localClosures) {\n          normalizedRenderer.___localClosures[accessor](\n            childScope,\n            normalizedRenderer.___localClosureValues[accessor]\n          );\n        }\n        if (normalizedRenderer.___params) {\n          if (inputIsArgs) {\n            normalizedRenderer.___params(\n              childScope,\n              normalizedRenderer._ ? args[0] : args\n            );\n          } else {\n            const inputWithContent = getContent ? { ...args, content: getContent(scope) } : args || {};\n            normalizedRenderer.___params(\n              childScope,\n              normalizedRenderer._ ? inputWithContent : [inputWithContent]\n            );\n          }\n        }\n      }\n    }\n  };\n};\nfunction setConditionalRenderer(scope, nodeAccessor, newRenderer, createBranch2) {\n  const referenceNode = scope[nodeAccessor];\n  const prevBranch = scope[\"ConditionalScope:\" /* ConditionalScope */ + nodeAccessor];\n  const parentNode = referenceNode.nodeType > 1 /* Element */ ? (prevBranch?.___startNode || referenceNode).parentNode : referenceNode;\n  const newBranch = scope[\"ConditionalScope:\" /* ConditionalScope */ + nodeAccessor] = newRenderer && createBranch2(scope.$global, newRenderer, scope, parentNode);\n  if (referenceNode === parentNode) {\n    if (prevBranch) {\n      destroyBranch(prevBranch);\n      referenceNode.textContent = \"\";\n    }\n    if (newBranch) {\n      insertBranchBefore(newBranch, parentNode, null);\n    }\n  } else if (prevBranch) {\n    if (newBranch) {\n      insertBranchBefore(newBranch, parentNode, prevBranch.___startNode);\n    } else {\n      parentNode.insertBefore(referenceNode, prevBranch.___startNode);\n    }\n    removeAndDestroyBranch(prevBranch);\n  } else if (newBranch) {\n    insertBranchBefore(newBranch, parentNode, referenceNode);\n    referenceNode.remove();\n  }\n}\nfunction loopOf(nodeAccessor, renderer) {\n  return loop(\n    nodeAccessor,\n    renderer,\n    ([all, by = bySecondArg], cb) => {\n      if (typeof by === \"string\") {\n        forOf(\n          all,\n          (item, i) => cb(item[by], [item, i])\n        );\n      } else {\n        forOf(all, (item, i) => cb(by(item, i), [item, i]));\n      }\n    }\n  );\n}\nfunction loopIn(nodeAccessor, renderer) {\n  return loop(\n    nodeAccessor,\n    renderer,\n    ([obj, by = byFirstArg], cb) => forIn(obj, (key, value2) => cb(by(key, value2), [key, value2]))\n  );\n}\nfunction loopTo(nodeAccessor, renderer) {\n  return loop(\n    nodeAccessor,\n    renderer,\n    ([to, from, step, by = byFirstArg], cb) => forTo(to, from, step, (v) => cb(by(v), [v]))\n  );\n}\nfunction loop(nodeAccessor, renderer, forEach) {\n  const params = renderer.___params;\n  enableBranches();\n  return (scope, value2) => {\n    const referenceNode = scope[nodeAccessor];\n    const oldMap = scope[\"LoopScopeMap:\" /* LoopScopeMap */ + nodeAccessor];\n    const oldArray = oldMap ? scope[\"LoopScopeArray:\" /* LoopScopeArray */ + nodeAccessor] || [\n      ...oldMap.values()\n    ] : [];\n    const parentNode = referenceNode.nodeType > 1 /* Element */ ? referenceNode.parentNode || oldArray[0].___startNode.parentNode : referenceNode;\n    const newMap = scope[\"LoopScopeMap:\" /* LoopScopeMap */ + nodeAccessor] = /* @__PURE__ */ new Map();\n    const newArray = scope[\"LoopScopeArray:\" /* LoopScopeArray */ + nodeAccessor] = [];\n    forEach(value2, (key, args) => {\n      const branch = oldMap?.get(key) || createAndSetupBranch(scope.$global, renderer, scope, parentNode);\n      params?.(branch, args);\n      newMap.set(key, branch);\n      newArray.push(branch);\n    });\n    let afterReference = null;\n    if (referenceNode !== parentNode) {\n      if (oldArray.length) {\n        afterReference = oldArray[oldArray.length - 1].___endNode.nextSibling;\n        if (!newArray.length) {\n          parentNode.insertBefore(referenceNode, afterReference);\n        }\n      } else if (newArray.length) {\n        afterReference = referenceNode.nextSibling;\n        referenceNode.remove();\n      }\n    }\n    reconcile(parentNode, oldArray, newArray, afterReference);\n  };\n}\nfunction createBranchWithTagNameOrRenderer($global, tagNameOrRenderer, parentScope, parentNode) {\n  const branch = createBranch(\n    $global,\n    tagNameOrRenderer,\n    parentScope,\n    parentNode\n  );\n  if (typeof tagNameOrRenderer === \"string\") {\n    branch[true ? `#${tagNameOrRenderer}/0` : 0] = branch.___startNode = branch.___endNode = document.createElementNS(\n      tagNameOrRenderer === \"svg\" ? \"http://www.w3.org/2000/svg\" : tagNameOrRenderer === \"math\" ? \"http://www.w3.org/1998/Math/MathML\" : parentNode.namespaceURI,\n      tagNameOrRenderer\n    );\n  } else {\n    setupBranch(tagNameOrRenderer, branch);\n  }\n  return branch;\n}\nfunction bySecondArg(_item, index) {\n  return index;\n}\nfunction byFirstArg(name) {\n  return name;\n}\n\n// src/dom/queue.ts\nvar pendingRenders = [];\nvar pendingRendersLookup = /* @__PURE__ */ new Map();\nvar caughtError = /* @__PURE__ */ new WeakSet();\nvar placeholderShown = /* @__PURE__ */ new WeakSet();\nvar pendingEffects = [];\nvar pendingScopes = [];\nvar rendering;\nvar scopeKeyOffset = 1e3;\nfunction queueRender(scope, signal, signalKey, value2, scopeKey = scope.___id) {\n  const key = scopeKey * scopeKeyOffset + signalKey;\n  const existingRender = signalKey >= 0 && pendingRendersLookup.get(key);\n  if (existingRender) {\n    existingRender.___value = value2;\n  } else {\n    const render = {\n      ___key: key,\n      ___scope: scope,\n      ___signal: signal,\n      ___value: value2\n    };\n    let i = pendingRenders.push(render) - 1;\n    while (i) {\n      const parentIndex = i - 1 >> 1;\n      const parent = pendingRenders[parentIndex];\n      if (key - parent.___key >= 0) break;\n      pendingRenders[i] = parent;\n      i = parentIndex;\n    }\n    signalKey >= 0 && pendingRendersLookup.set(key, render);\n    pendingRenders[i] = render;\n  }\n}\nfunction queueEffect(scope, fn) {\n  pendingEffects.push(fn, scope);\n}\nfunction run() {\n  const effects = pendingEffects;\n  try {\n    rendering = 1;\n    runRenders();\n  } finally {\n    pendingRenders = [];\n    pendingRendersLookup = /* @__PURE__ */ new Map();\n    pendingEffects = [];\n    rendering = 0;\n  }\n  runEffects(effects);\n}\nfunction prepareEffects(fn) {\n  const prevRenders = pendingRenders;\n  const prevRendersLookup = pendingRendersLookup;\n  const prevEffects = pendingEffects;\n  const preparedEffects = pendingEffects = [];\n  pendingRenders = [];\n  pendingRendersLookup = /* @__PURE__ */ new Map();\n  try {\n    rendering = 1;\n    fn();\n    runRenders();\n  } finally {\n    rendering = 0;\n    pendingRenders = prevRenders;\n    pendingRendersLookup = prevRendersLookup;\n    pendingEffects = prevEffects;\n  }\n  return preparedEffects;\n}\nvar runEffects = (effects) => {\n  for (let i = 0, scope; i < effects.length; ) {\n    effects[i++](\n      scope = effects[i++],\n      scope\n    );\n  }\n};\nfunction runRenders() {\n  while (pendingRenders.length) {\n    const render = pendingRenders[0];\n    const item = pendingRenders.pop();\n    if (render !== item) {\n      let i = 0;\n      const mid = pendingRenders.length >> 1;\n      const key = (pendingRenders[0] = item).___key;\n      while (i < mid) {\n        let bestChild = (i << 1) + 1;\n        const right = bestChild + 1;\n        if (right < pendingRenders.length && pendingRenders[right].___key - pendingRenders[bestChild].___key < 0) {\n          bestChild = right;\n        }\n        if (pendingRenders[bestChild].___key - key >= 0) {\n          break;\n        } else {\n          pendingRenders[i] = pendingRenders[bestChild];\n          i = bestChild;\n        }\n      }\n      pendingRenders[i] = item;\n    }\n    if (!render.___scope.___closestBranch?.___destroyed) {\n      runRender(render);\n    }\n  }\n  for (const scope of pendingScopes) {\n    scope.___creating = 0;\n  }\n  pendingScopes = [];\n}\nvar runRender = (render) => render.___signal(render.___scope, render.___value);\nvar enableCatch = () => {\n  enableCatch = () => {\n  };\n  enableBranches();\n  const handlePendingTry = (fn, scope, branch) => {\n    while (branch) {\n      if (branch.___pendingAsyncCount) {\n        return (branch.___effects ||= []).push(fn, scope);\n      }\n      branch = branch.___parentBranch;\n    }\n  };\n  runEffects = /* @__PURE__ */ ((runEffects2) => (effects, checkPending = placeholderShown.has(effects)) => {\n    if (checkPending || caughtError.has(effects)) {\n      let i = 0;\n      let fn;\n      let scope;\n      let branch;\n      for (; i < effects.length; ) {\n        fn = effects[i++];\n        scope = effects[i++];\n        branch = scope.___closestBranch;\n        if (!branch?.___destroyed && !(checkPending && handlePendingTry(fn, scope, branch))) {\n          fn(scope, scope);\n        }\n      }\n    } else {\n      runEffects2(effects);\n    }\n  })(runEffects);\n  runRender = /* @__PURE__ */ ((runRender2) => (render) => {\n    try {\n      runRender2(render);\n    } catch (error) {\n      renderCatch(render.___scope, error);\n    }\n  })(runRender);\n};\n\n// src/dom/abort-signal.ts\nfunction resetAbortSignal(scope, id) {\n  const ctrl = scope.___abortControllers?.[id];\n  if (ctrl) {\n    queueEffect(ctrl, abort);\n    scope.___abortControllers[id] = void 0;\n  }\n}\nfunction getAbortSignal(scope, id) {\n  if (scope.___closestBranch) {\n    (scope.___closestBranch.___abortScopes ||= /* @__PURE__ */ new Set()).add(scope);\n  }\n  return ((scope.___abortControllers ||= {})[id] ||= new AbortController()).signal;\n}\nfunction abort(ctrl) {\n  ctrl.abort();\n}\n\n// src/common/compat-meta.ts\nvar prefix = true ? \"$compat_\" : \"$C_\";\nvar RENDERER_REGISTER_ID = prefix + (true ? \"renderer\" : \"r\");\nvar SET_SCOPE_REGISTER_ID = prefix + (true ? \"setScope\" : \"s\");\nvar RENDER_BODY_ID = prefix + (true ? \"renderBody\" : \"b\");\n\n// src/dom/compat.ts\nvar classIdToBranch = /* @__PURE__ */ new Map();\nvar compat = {\n  patchDynamicTag,\n  queueEffect,\n  init(warp10Noop) {\n    register(SET_SCOPE_REGISTER_ID, (branch) => {\n      classIdToBranch.set(branch.m5c, branch);\n    });\n    register(RENDER_BODY_ID, warp10Noop);\n  },\n  registerRenderer(fn) {\n    register(RENDERER_REGISTER_ID, fn);\n  },\n  isRenderer(renderer) {\n    return renderer.___clone;\n  },\n  getStartNode(branch) {\n    return branch.___startNode;\n  },\n  setScopeNodes(branch, startNode, endNode) {\n    branch.___startNode = startNode;\n    branch.___endNode = endNode;\n  },\n  runComponentEffects() {\n    runEffects(this.effects);\n  },\n  runComponentDestroy() {\n    if (this.scope) {\n      destroyBranch(this.scope);\n    }\n  },\n  resolveRegistered(value2, {\n    runtimeId,\n    componentIdPrefix\n  }) {\n    if (Array.isArray(value2) && typeof value2[0] === \"string\") {\n      return getRegisteredWithScope(\n        value2[0],\n        value2.length === 2 && self[runtimeId]?.[componentIdPrefix === \"s\" ? \"_\" : componentIdPrefix]?.s[value2[1]]\n      );\n    }\n    return value2;\n  },\n  createRenderer(params, clone) {\n    const renderer = createRenderer(0, 0, 0, params);\n    renderer.___clone = (branch) => {\n      const cloned = clone();\n      branch.___startNode = cloned.startNode;\n      branch.___endNode = cloned.endNode;\n    };\n    return renderer;\n  },\n  render(out, component, renderer, args) {\n    let branch = component.scope;\n    if (!branch) {\n      branch = classIdToBranch.get(component.id);\n      if (branch) {\n        component.scope = branch;\n        classIdToBranch.delete(component.id);\n      }\n    }\n    let existing;\n    if (typeof args[0] === \"object\" && \"renderBody\" in args[0]) {\n      const input = args[0];\n      const normalizedInput = args[0] = {};\n      for (const key in input) {\n        normalizedInput[key === \"renderBody\" ? \"content\" : key] = input[key];\n      }\n    }\n    component.effects = prepareEffects(() => {\n      if (!branch) {\n        out.global.___nextScopeId ||= 0;\n        branch = component.scope = createAndSetupBranch(\n          out.global,\n          renderer,\n          renderer.___owner,\n          document.body\n        );\n      } else {\n        existing = 1;\n      }\n      renderer.___params?.(branch, renderer._ ? args[0] : args);\n    });\n    if (!existing) {\n      return toInsertNode(branch.___startNode, branch.___endNode);\n    }\n  }\n};\n\n// src/dom/template.ts\nvar createTemplate = (id, template, walks, setup, inputSignal) => {\n  const renderer = createContent(\n    id,\n    template,\n    walks,\n    setup,\n    inputSignal\n  )();\n  renderer.mount = mount;\n  renderer._ = renderer;\n  if (true) {\n    renderer.render = () => {\n      throw new Error(\n        `render() is not implemented for the DOM compilation of a Marko template`\n      );\n    };\n  }\n  return register(id, renderer);\n};\nfunction mount(input = {}, reference, position) {\n  let branch;\n  let parentNode = reference;\n  let nextSibling = null;\n  let { $global } = input;\n  if ($global) {\n    ({ $global, ...input } = input);\n    $global = {\n      ___nextScopeId: 0,\n      runtimeId: DEFAULT_RUNTIME_ID,\n      renderId: DEFAULT_RENDER_ID,\n      ...$global\n    };\n  } else {\n    $global = {\n      ___nextScopeId: 0,\n      runtimeId: DEFAULT_RUNTIME_ID,\n      renderId: DEFAULT_RENDER_ID\n    };\n  }\n  switch (position) {\n    case \"beforebegin\":\n      parentNode = reference.parentNode;\n      nextSibling = reference;\n      break;\n    case \"afterbegin\":\n      nextSibling = reference.firstChild;\n      break;\n    case \"afterend\":\n      parentNode = reference.parentNode;\n      nextSibling = reference.nextSibling;\n      break;\n  }\n  let curValue;\n  const args = this.___params;\n  const effects = prepareEffects(() => {\n    branch = createBranch(\n      $global,\n      this,\n      void 0,\n      parentNode\n    );\n    branch[\"#TagVariable\" /* TagVariable */] = (newValue) => {\n      curValue = newValue;\n    };\n    this.___setup?.(branch);\n    args?.(branch, input);\n  });\n  insertChildNodes(\n    parentNode,\n    nextSibling,\n    branch.___startNode,\n    branch.___endNode\n  );\n  runEffects(effects);\n  return {\n    get value() {\n      return curValue;\n    },\n    set value(newValue) {\n      tagVarSignalChange(branch, newValue);\n    },\n    update(newInput) {\n      if (args) {\n        runEffects(\n          prepareEffects(() => {\n            args(branch, newInput);\n          })\n        );\n      }\n    },\n    destroy() {\n      removeAndDestroyBranch(branch);\n    }\n  };\n}\nexport {\n  attr,\n  attrTag,\n  attrTags,\n  attrs,\n  attrsAndContent,\n  attrsEvents,\n  awaitTag,\n  classAttr,\n  classItem,\n  classItems,\n  compat,\n  conditional,\n  conditionalClosure,\n  controllable_detailsOrDialog_open,\n  controllable_detailsOrDialog_open_effect,\n  controllable_input_checked,\n  controllable_input_checkedValue,\n  controllable_input_checkedValue_effect,\n  controllable_input_checked_effect,\n  controllable_input_value,\n  controllable_input_value_effect,\n  controllable_select_value,\n  controllable_select_value_effect,\n  controllable_input_value as controllable_textarea_value,\n  controllable_input_value_effect as controllable_textarea_value_effect,\n  createContent,\n  createRenderer,\n  createTemplate,\n  createTry,\n  data,\n  dynamicClosure,\n  dynamicClosureRead,\n  dynamicTag,\n  effect,\n  enableCatch,\n  forIn,\n  forOf,\n  forTo,\n  getAbortSignal,\n  hoist,\n  html,\n  init,\n  insertContent,\n  intersection,\n  lifecycle,\n  localClosures,\n  loopClosure,\n  loopIn,\n  loopOf,\n  loopTo,\n  nextTagId,\n  nodeRef,\n  on,\n  partialAttrs,\n  partialAttrsAndContent,\n  props,\n  register,\n  registerBoundSignal,\n  registerContent,\n  resetAbortSignal,\n  run,\n  setTagVar,\n  setTagVarChange,\n  state,\n  styleAttr,\n  styleItem,\n  styleItems,\n  tagVarSignal,\n  tagVarSignalChange,\n  textContent,\n  value\n};\n"],
  "mappings": "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",
  "names": ["_a"]
}
