import { type Accessor } from "../common/types";
import { type ServerRenderer } from "./template";
interface BodyContentObject {
    [x: PropertyKey]: unknown;
    content: ServerRenderer;
}
export declare let dynamicTag: (scopeId: number, accessor: Accessor, tag: unknown | string | ServerRenderer | BodyContentObject, inputOrArgs: unknown, content?: (() => void) | 0, inputIsArgs?: 1, serializeReason?: 1 | 0) => unknown;
export declare function createContent(id: string, fn: ServerRenderer): ServerRenderer;
export declare function registerContent(id: string, fn: ServerRenderer, scopeId?: number): ServerRenderer;
export declare function patchDynamicTag(patch: (scopeId: number, accessor: Accessor, tag: unknown | string | ServerRenderer | BodyContentObject) => unknown): void;
export {};
