import { patchDynamicTag } from "./control-flow";
import { queueEffect } from "./queue";
import { type Renderer } from "./renderer";
export declare const compat: {
    patchDynamicTag: typeof patchDynamicTag;
    queueEffect: typeof queueEffect;
    init(warp10Noop: any): void;
    registerRenderer(fn: any): void;
    isRenderer(renderer: any): any;
    getStartNode(branch: any): any;
    setScopeNodes(branch: any, startNode: Node, endNode: Node): void;
    runComponentEffects(this: any): void;
    runComponentDestroy(this: any): void;
    resolveRegistered(value: any, { runtimeId, componentIdPrefix, }: {
        runtimeId: string;
        componentIdPrefix: string;
    }): any;
    createRenderer(params: NonNullable<Renderer["___params"]>, clone: () => {
        startNode: ChildNode;
        endNode: ChildNode;
    }): Renderer;
    render(out: any, component: any, renderer: Renderer, args: any): Node | undefined;
};
