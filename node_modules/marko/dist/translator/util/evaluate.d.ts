import type { types as t } from "@marko/compiler";
declare module "@marko/compiler/dist/types" {
    interface NodeExtra {
        confident?: boolean;
        computed?: unknown;
        nullable?: boolean;
    }
}
export default function evaluate<T extends t.Expression>(value: T): T["extra"] & {
    confident: boolean;
    nullable: boolean;
    computed: unknown;
};
