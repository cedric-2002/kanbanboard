import { types as t } from "@marko/compiler";
import { AccessorPrefix, AccessorProp } from "../../common/types";
import { type Opt } from "./optional";
import { type Binding, type ReferencedBindings, type Sources } from "./references";
import type { Section } from "./sections";
export type SerializeReasons = true | [Sources, ...Sources[]];
export type SerializeReason = true | Sources;
export type SerializeKey = symbol & {
    __serialize_key__: 1;
};
export declare function forceOwnersSerialize(from: Section, to: Section, prop?: AccessorProp | symbol): void;
export declare function addOwnersSerializeReason(from: Section, to: Section, reason: undefined | boolean | SerializeReason, prop?: AccessorProp | symbol): void;
export declare function forceSectionSerialize(section: Section, prop?: AccessorProp | symbol): void;
export declare function forceBindingSerialize(section: Section, binding: Binding, prefix?: AccessorPrefix | symbol): void;
export declare function isSectionForceSerialized(section: Section, prop?: AccessorProp | symbol): boolean;
export declare function isBindingForceSerialized(section: Section, binding: Binding, prefix?: AccessorPrefix | symbol): boolean;
export declare function addSectionSerializeReasonExpr(section: Section, expr: undefined | boolean | Opt<t.NodeExtra>, prop?: AccessorProp | symbol): void;
export declare function addBindingSerializeReasonExpr(section: Section, binding: Binding, expr: undefined | boolean | Opt<t.NodeExtra>, prefix?: AccessorPrefix | symbol): void;
export declare function addSectionSerializeReasonRef(section: Section, ref: undefined | boolean | ReferencedBindings, prop?: AccessorProp | symbol): void;
export declare function addBindingSerializeReasonRef(section: Section, binding: Binding, ref: undefined | boolean | ReferencedBindings, prefix?: AccessorPrefix | symbol): void;
export declare function addSectionSerializeReason(section: Section, reason: undefined | false | SerializeReason, prop?: AccessorProp | symbol): void;
export declare function addBindingSerializeReason(section: Section, binding: Binding, reason: undefined | false | SerializeReason, prefix?: AccessorPrefix | symbol): void;
export declare function getSectionSerializeReason(section: Section, prop?: AccessorProp | symbol): SerializeReason | undefined;
export declare function getBindingSerializeReason(section: Section, binding: Binding, prefix?: AccessorPrefix | symbol): SerializeReason | undefined;
export declare function applySerializeReasonExprs(section: Section): void;
export declare function finalizeSectionSerializeReasons(section: Section): void;
export declare function getSerializeSourcesForExpr(expr: t.NodeExtra): Sources | undefined;
export declare function getSerializeSourcesForExprs(exprs: Opt<t.NodeExtra>): Sources | undefined;
export declare function getSerializeSourcesForRef(ref: ReferencedBindings): Sources | undefined;
export declare function mergeSerializeReasons(a: SerializeReason, b: undefined | SerializeReason): SerializeReason;
export declare function mergeSerializeReasons(a: undefined | SerializeReason, b: SerializeReason): SerializeReason;
export declare function mergeSerializeReasons(a: undefined | SerializeReason, b: undefined | SerializeReason): SerializeReason | undefined;
