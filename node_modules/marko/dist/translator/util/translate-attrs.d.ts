import { types as t } from "@marko/compiler";
import { type TemplateExports } from "../visitors/program";
import { type AttrTagLookup } from "./nested-attribute-tags";
type ContentKey = "renderBody" | "content";
export declare function translateAttrs(tag: t.NodePath<t.MarkoTag>, templateExports?: TemplateExports, statements?: t.Statement[], contentKey?: ContentKey): {
    properties: (t.ObjectMethod | t.ObjectProperty | t.SpreadElement)[];
    statements: t.Statement[];
};
export declare function getTranslatedBodyContentProperty(props: t.ObjectExpression["properties"]): (t.ObjectProperty & {
    value: t.Expression;
}) | undefined;
export declare function addDynamicAttrTagStatements(attrTags: t.NodePath<t.MarkoTag["attributeTags"][number]>[], index: number, attrTagLookup: AttrTagLookup, statements: t.Statement[], templateExports: TemplateExports, contentKey?: ContentKey): number;
export declare function propsToExpression(props: t.ObjectExpression["properties"]): t.Expression;
export {};
