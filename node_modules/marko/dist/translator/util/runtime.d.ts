import { types as t } from "@marko/compiler";
import type { Falsy } from "../../common/types";
import { attr, classAttr, escapeScript, escapeStyle, escapeXML, styleAttr, toString } from "../../html";
export declare function importRuntime(name: keyof typeof import("../../dom") | keyof typeof import("../../html")): t.MemberExpression;
export declare function callRuntime(name: keyof typeof import("../../dom") | keyof typeof import("../../html"), ...args: Array<Parameters<typeof t.callExpression>[1][number] | Falsy>): t.CallExpression;
export declare function getHTMLRuntime(): {
    escapeXML: typeof escapeXML;
    toString: typeof toString;
    attr: typeof attr;
    classAttr: typeof classAttr;
    styleAttr: typeof styleAttr;
    escapeScript: typeof escapeScript;
    escapeStyle: typeof escapeStyle;
};
export declare function getCompatRuntimeFile(): string;
