import type { types as t } from "@marko/compiler";
type MarkoExprRootPath = t.NodePath<t.MarkoTag | t.MarkoTagBody | t.MarkoAttribute | t.MarkoSpreadAttribute | t.MarkoScriptlet | t.MarkoPlaceholder>;
export declare function getMarkoRoot(path: t.NodePath<t.Node>): MarkoExprRootPath | null;
export declare function getExprRoot(path: t.NodePath<t.Node>): t.NodePath<t.Node>;
export declare function getFnRoot(path: t.NodePath<t.Node>): t.NodePath<t.ArrowFunctionExpression | t.FunctionExpression | t.ObjectMember> | undefined;
export declare function isMarko(path: t.NodePath<any>): path is MarkoExprRootPath;
export {};
