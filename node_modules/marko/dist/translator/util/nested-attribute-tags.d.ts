import { types as t } from "@marko/compiler";
export type AttrTagLookup = Record<string, {
    name: string;
    dynamic: boolean;
    repeated: boolean;
    group: AttrTagNames;
}>;
type AttrTagNames = string[];
declare module "@marko/compiler/dist/types" {
    interface MarkoTagExtra {
        attributeTags?: AttrTagLookup;
        attributeTagGroup?: AttrTagLookup[string]["group"];
    }
}
export declare function getAttrTagIdentifier(meta: AttrTagLookup[string]): t.Identifier;
export declare function analyzeAttributeTags(tag: t.NodePath<t.MarkoTag>): AttrTagLookup | undefined;
export {};
