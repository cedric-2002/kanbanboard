import { types as t } from "@marko/compiler";
import { type Binding } from "../../util/references";
declare const kDOMBinding: unique symbol;
declare const kChildOffsetScopeBinding: unique symbol;
declare module "@marko/compiler/dist/types" {
    interface MarkoTagExtra {
        [kDOMBinding]?: Binding;
        [kChildOffsetScopeBinding]?: Binding;
    }
}
declare const _default: {
    analyze: {
        enter(this: unknown, tag: t.NodePath<t.MarkoTag>): void;
    };
    translate: {
        enter(this: unknown, tag: t.NodePath<t.MarkoTag>): void;
        exit(this: unknown, tag: t.NodePath<t.MarkoTag>): void;
    };
};
export default _default;
