import { types as t } from "@marko/compiler";
declare module "@marko/compiler/dist/types" {
    interface FunctionDeclarationExtra {
        registerId?: string;
        name?: string;
    }
    interface FunctionExpressionExtra {
        registerId?: string;
        name?: string;
    }
    interface ArrowFunctionExpressionExtra {
        registerId?: string;
        name?: string;
    }
}
declare const _default: {
    analyze(this: unknown, fn: t.NodePath<t.Function>): void;
};
export default _default;
